{"version":3,"sources":["../generation.js"],"names":["parser","Parser","Array","prototype","randElement","Math","floor","random","length","rand","min","max","randInt","randBool","chance","Expression","source","expr","variables","isNumber","expression","evaluate","isNaN","parse","toString","Number","RandRange","minA","maxA","minB","maxB","bFirst","a","undefined","b","_minB","value","_maxB","_minA","_maxA","num","parseInt","RandRangeAdv","target","BFirst","result","Rule","condition","_condition","OperatorGen","operator","range","rules","isAdv","push","operatorGenFuncA","operatorGenFuncB","i","generateFunc","generate","every","x","validate","Generator","minOperators","maxOperators","operatorGens","operators","count","results","len","first","second"],"mappings":";;;;;;;;;;;;;;AAAA,IAAIA,SAAS,IAAIC,MAAJ,EAAb;;AAEAC,MAAMC,SAAN,CAAgBC,WAAhB,GAA8B,YAAY;AACtC,WAAO,KAAKC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,KAAKC,MAAhC,CAAL,CAAP;AACH,CAFD;;AAIA,SAASC,IAAT,CAAcC,GAAd,EAAmBC,GAAnB,EAAwB;AACpB,WAAON,KAAKE,MAAL,MAAiBI,MAAMD,GAAvB,IAA8BA,GAArC;AACH;;AAED,SAASE,OAAT,CAAiBF,GAAjB,EAAsBC,GAAtB,EAA2B;AACvB,WAAON,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiBI,MAAMD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACH;;AAED,SAASG,QAAT,CAAkBC,MAAlB,EAA0B;AACtB,WAAOT,KAAKE,MAAL,KAAgBO,MAAvB;AACH;;IAEKC,U;AACF,wBAAYC,MAAZ,EAAoB;AAAA;;AAChB,aAAKC,IAAL,GAAYD,MAAZ;AACH;;;;gCA0BqB;AAAA,gBAAhBE,SAAgB,uEAAJ,EAAI;;AAClB,mBAAO,KAAKC,QAAL,GAAgB,KAAKC,UAArB,GAAkC,KAAKA,UAAL,CAAgBC,QAAhB,CAAyBH,SAAzB,CAAzC;AACH;;;0BA1BQF,M,EAAQ;AACb,gBAAIM,MAAMN,MAAN,CAAJ,EAAmB;AACf,oBAAIA,kBAAkBD,UAAtB,EAAkC;AAC9B,yBAAKC,MAAL,GAAcA,OAAOA,MAArB;AACA,yBAAKI,UAAL,GAAkBJ,OAAOI,UAAzB;AACA,yBAAKD,QAAL,GAAgBH,OAAOG,QAAvB;AACH,iBAJD,MAKK;AACD,yBAAKH,MAAL,GAAcA,MAAd;AACA,yBAAKI,UAAL,GAAkBpB,OAAOuB,KAAP,CAAaP,MAAb,CAAlB;AACA,yBAAKG,QAAL,GAAgB,KAAhB;AACH;AACJ,aAXD,MAYK;AACD,qBAAKH,MAAL,GAAcA,OAAOQ,QAAP,EAAd;AACA,qBAAKJ,UAAL,GAAkBK,OAAOT,MAAP,CAAlB;AACA,qBAAKG,QAAL,GAAgB,IAAhB;AACH;AACJ,S;4BAEU;AACP,mBAAO,KAAKH,MAAZ;AACH;;;;;;IAOCU,S;AACF,uBAAYC,IAAZ,EAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoD;AAAA,YAAhBC,MAAgB,uEAAP,KAAO;;AAAA;;AAChD,aAAKJ,IAAL,GAAYA,IAAZ;AACA,aAAKC,IAAL,GAAYA,IAAZ;AACA,aAAKC,IAAL,GAAYA,IAAZ;AACA,aAAKC,IAAL,GAAYA,IAAZ;AACA,aAAKC,MAAL,GAAcA,MAAd;AACH;;;;mCAEsC;AAAA,gBAA9BC,CAA8B,uEAA1BC,SAA0B;AAAA,gBAAfC,CAAe,uEAAXD,SAAW;;AACnC,gBAAID,MAAMC,SAAN,IAAmBC,MAAMD,SAA7B,EAAwC;AACpC,uBAAO,CAACD,CAAD,EAAIE,CAAJ,CAAP;AACH,aAFD,MAGK,IAAIF,MAAMC,SAAN,IAAmBC,MAAMD,SAA7B,EAAwC;AACzC,oBAAI,KAAKF,MAAT,EAAiB;AACbG,wBAAItB,QAAQ,KAAKuB,KAAL,CAAWC,KAAX,EAAR,EAA4B,KAAKC,KAAL,CAAWD,KAAX,EAA5B,CAAJ;AACH,iBAFD,MAGK;AACDJ,wBAAIpB,QAAQ,KAAK0B,KAAL,CAAWF,KAAX,EAAR,EAA4B,KAAKG,KAAL,CAAWH,KAAX,EAA5B,CAAJ;AACH;AACJ;AACD,gBAAIJ,MAAMC,SAAV,EAAqB;AACjBC,oBAAItB,QAAQ,KAAKuB,KAAL,CAAWC,KAAX,CAAiB,EAACJ,GAAGA,CAAJ,EAAjB,CAAR,EAAkC,KAAKK,KAAL,CAAWD,KAAX,CAAiB,EAACJ,GAAGA,CAAJ,EAAjB,CAAlC,CAAJ;AACA,uBAAO,CAACA,CAAD,EAAIE,CAAJ,CAAP;AACH,aAHD,MAIK,IAAIA,MAAMD,SAAV,EAAqB;AACtBD,oBAAIpB,QAAQ,KAAK0B,KAAL,CAAWF,KAAX,CAAiB,EAACF,GAAGA,CAAJ,EAAjB,CAAR,EAAkC,KAAKK,KAAL,CAAWH,KAAX,CAAiB,EAACF,GAAGA,CAAJ,EAAjB,CAAlC,CAAJ;AACH;AACD,mBAAO,CAACF,CAAD,EAAIE,CAAJ,CAAP;AACH;;;0BAESM,G,EAAK;AACXA,kBAAMC,SAASD,GAAT,CAAN;AACA,gBAAIA,QAAQ,CAAZ,EAAe;AACX,qBAAKT,MAAL,GAAc,KAAd;AACH,aAFD,MAGK,IAAIS,QAAQ,CAAZ,EAAe;AAChB,qBAAKT,MAAL,GAAc,IAAd;AACH;AACJ,S;4BACW;AACR,mBAAO,KAAKA,MAAL,GAAc,CAAd,GAAkB,CAAzB;AACH;;;0BAEQd,I,EAAM;AACX,iBAAKqB,KAAL,GAAa,IAAIvB,UAAJ,CAAeE,IAAf,CAAb;AACH,S;4BACU;AACP,mBAAO,KAAKqB,KAAL,CAAWtB,MAAlB;AACH;;;0BACQC,I,EAAM;AACX,iBAAKsB,KAAL,GAAa,IAAIxB,UAAJ,CAAeE,IAAf,CAAb;AACH,S;4BACU;AACP,mBAAO,KAAKsB,KAAL,CAAWvB,MAAlB;AACH;;;0BACQC,I,EAAM;AACX,iBAAKkB,KAAL,GAAa,IAAIpB,UAAJ,CAAeE,IAAf,CAAb;AACH,S;4BACU;AACP,mBAAO,KAAKkB,KAAL,CAAWnB,MAAlB;AACH;;;0BACQC,I,EAAM;AACX,iBAAKoB,KAAL,GAAa,IAAItB,UAAJ,CAAeE,IAAf,CAAb;AACH,S;4BACU;AACP,mBAAO,KAAKoB,KAAL,CAAWrB,MAAlB;AACH;;;4BAEW;AACR,mBAAO,KAAP;AACH;;;;;;IAGC0B,Y;;;AACF,0BAAYf,IAAZ,EAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoCV,UAApC,EAAgDuB,MAAhD,EAAwE;AAAA,YAAhBC,MAAgB,uEAAP,KAAO;;AAAA;;AAAA,gIAC9DjB,IAD8D,EACxDC,IADwD,EAClDC,IADkD,EAC5CC,IAD4C,EACtCc,MADsC;;AAEpE,cAAKxB,UAAL,GAAkBpB,OAAOuB,KAAP,CAAaH,UAAb,CAAlB;AACA,YAAIuB,WAAW,GAAf,EAAoB,MAAKA,MAAL,GAAc,CAAd,CAApB,KACK,IAAIA,WAAW,GAAf,EAAoB,MAAKA,MAAL,GAAc,CAAd;AAJ2C;AAKvE;;;;sCAEavB,U,EAAY;AACtB,iBAAKA,UAAL,GAAkBpB,OAAOuB,KAAP,CAAaH,UAAb,CAAlB;AACH;;;kCAESuB,M,EAAQ;AACd,gBAAIA,WAAW,GAAf,EAAoB,KAAKA,MAAL,GAAc,CAAd,CAApB,KACK,IAAIA,WAAW,GAAf,EAAoB,KAAKA,MAAL,GAAc,CAAd;AAC5B;;;mCAEsC;AAAA,gBAA9BX,CAA8B,uEAA1BC,SAA0B;AAAA,gBAAfC,CAAe,uEAAXD,SAAW;;AACnC,gBAAIY,8HAAwBb,CAAxB,EAA2BE,CAA3B,CAAJ;AACA,gBAAI,EAAGF,MAAMC,SAAN,IAAmB,KAAKU,MAAL,KAAgB,CAApC,IAA2CT,MAAMD,SAAN,IAAmB,KAAKU,MAAL,KAAgB,CAAhF,CAAJ,EAAyF;AACrFE,uBAAO,KAAKF,MAAZ,IAAsB,KAAKvB,UAAL,CAAgBC,QAAhB,CAAyB,EAACW,GAAGa,OAAO,CAAP,CAAJ,EAAeX,GAAGW,OAAO,CAAP,CAAlB,EAAzB,CAAtB;AACH;AACD,mBAAOA,MAAP;AACH;;;4BAEW;AACR,mBAAO,IAAP;AACH;;;;EA3BsBnB,S;;IA8BrBoB,I;AACF,kBAAYC,SAAZ,EAAuB;AAAA;;AACnB,YAAIA,cAAcd,SAAlB,EAA6B;AACzB,iBAAKc,SAAL,GAAiBA,SAAjB;AACH,SAFD,MAGK;AACD,iBAAK/B,MAAL,GAAc,EAAd;AACH;AACJ;;;;mCAUwB;AAAA,gBAAhBE,SAAgB,uEAAJ,EAAI;;AACrB,mBAAO,KAAK8B,UAAL,CAAgB3B,QAAhB,CAAyBH,SAAzB,CAAP;AACH;;;0BAVaD,I,EAAM;AAChB,iBAAK+B,UAAL,GAAkBhD,OAAOuB,KAAP,CAAaN,IAAb,CAAlB;AACA,iBAAKD,MAAL,GAAcC,IAAd;AACH,S;4BACe;AACZ,mBAAO,KAAKD,MAAZ;AACH;;;;;;IAOCiC,W;AACF,yBAAYC,QAAZ,EAAsBC,KAAtB,EAAuC;AAAA;;AACnC,aAAKD,QAAL,GAAgBA,QAAhB;AACA,aAAKC,KAAL,GAAaA,KAAb;;AAFmC,0CAAPC,KAAO;AAAPA,iBAAO;AAAA;;AAGnC,aAAKA,KAAL,GAAaA,KAAb;AACH;;;;0CAEiB;AACd,gBAAI,KAAKD,KAAL,CAAWE,KAAf,EAAsB;AAClB,qBAAKF,KAAL,GAAa,IAAIzB,SAAJ,CAAc,KAAKyB,KAAL,CAAWxB,IAAzB,EAA+B,KAAKwB,KAAL,CAAWvB,IAA1C,EAAgD,KAAKuB,KAAL,CAAWtB,IAA3D,EAAiE,KAAKsB,KAAL,CAAWrB,IAA5E,EAAkF,KAAKqB,KAAL,CAAWpB,MAA7F,CAAb;AACH,aAFD,MAGK;AACD,qBAAKoB,KAAL,GAAa,IAAIT,YAAJ,CAAiB,KAAKS,KAAL,CAAWxB,IAA5B,EAAkC,KAAKwB,KAAL,CAAWvB,IAA7C,EAAmD,KAAKuB,KAAL,CAAWtB,IAA9D,EAAoE,KAAKsB,KAAL,CAAWrB,IAA/E,EAAqF,GAArF,EAA0F,GAA1F,EAA+F,KAAKqB,KAAL,CAAWpB,MAA1G,CAAb;AACH;AACJ;;;kCAES;AACN,iBAAKqB,KAAL,CAAWE,IAAX,CAAgB,IAAIR,IAAJ,EAAhB;AACH;;;mCAEoE;AAAA;;AAAA,gBAA5DS,gBAA4D,uEAAzCtB,SAAyC;AAAA,gBAA9BuB,gBAA8B,uEAAXvB,SAAW;;AACjE,gBAAID,IAAI,CAAR;AAAA,gBAAWE,IAAI,CAAf;AACA,gBAAIuB,IAAI,CAAR;AACA,gBAAIvC,kBAAJ;AACA,gBAAIwC,eAAe;AAAA;;AAAA,yCAAe,OAAKP,KAAL,CAAWQ,QAAX,EAAf,yDAAO3B,CAAP,wBAAUE,CAAV;AAAA,aAAnB;AACA,gBAAIqB,qBAAqBtB,SAArB,IAAkCuB,qBAAqBvB,SAA3D,EAAsE;AAClEyB,+BAAe,wBAAM;AACjB1B,wBAAIuB,kBAAJ;AACArB,wBAAIsB,kBAAJ;AACH,iBAHD;AAIH,aALD,MAMK,IAAID,qBAAqBtB,SAAzB,EAAoC;AACrCyB,+BAAe,wBAAM;AACjB1B,wBAAIuB,kBAAJ;;AADiB,2CAER,OAAKJ,KAAL,CAAWQ,QAAX,CAAoB3B,CAApB,CAFQ;;AAAA;;AAEhBA,qBAFgB;AAEbE,qBAFa;AAGpB,iBAHD;AAIH,aALI,MAMA,IAAIsB,qBAAqBvB,SAAzB,EAAoC;AACrCyB,+BAAe,wBAAM;AACjBxB,wBAAIsB,kBAAJ;;AADiB,2CAER,OAAKL,KAAL,CAAWQ,QAAX,CAAoBzB,CAApB,CAFQ;;AAAA;;AAEhBF,qBAFgB;AAEbE,qBAFa;AAGpB,iBAHD;AAIH;AACD,eAAG;AACCwB;AACAxC,4BAAY,EAACc,GAAGA,EAAEX,QAAF,EAAJ,EAAkBa,GAAGA,EAAEb,QAAF,EAArB,EAAZ;AACAoC;AACH,aAJD,QAKO,CAAC,KAAKL,KAAL,CAAWQ,KAAX,CAAiB;AAAA,uBAAKC,EAAEC,QAAF,CAAW5C,SAAX,CAAL;AAAA,aAAjB,CAAD,IAAiDuC,KAAK,KAL7D;AAMA,gBAAIA,KAAK,KAAT,EAAgB;AACZ,uBAAOxB,SAAP;AACH;AACD,mBAAO,IAAI,KAAKiB,QAAT,CAAkBlB,CAAlB,EAAqBE,CAArB,CAAP;AACH;;;;;;IAGC6B,S;AACF,uBAAYC,YAAZ,EAA0BC,YAA1B,EAAyD;AAAA;;AACrD,aAAKvD,GAAL,GAAWsD,YAAX;AACA,aAAKrD,GAAL,GAAWsD,YAAX;;AAFqD,2CAAdC,YAAc;AAAdA,wBAAc;AAAA;;AAGrD,aAAKC,SAAL,GAAiBD,YAAjB;AACH;;;;mCAEmB;AAAA;;AAAA,gBAAXE,KAAW,uEAAH,CAAG;;AAChB,gBAAIC,UAAU,EAAd;AACA,iBAAK,IAAIZ,IAAI,CAAb,EAAgBA,IAAIW,KAApB,EAA2BX,GAA3B,EAAgC;AAC5B,oBAAIa,MAAM1D,QAAQ,KAAKF,GAAb,EAAkB,KAAKC,GAAvB,CAAV;AACA,oBAAI2D,QAAQ,CAAZ,EAAe;AACXD,4BAAQf,IAAR,CAAa,KAAKa,SAAL,CAAe/D,WAAf,GAA6BuD,QAA7B,EAAb;AACH,iBAFD,MAGK,IAAIW,QAAQ,CAAZ,EAAe;AAAA;AAChB,4BAAIC,QAAQ,OAAKJ,SAAL,CAAe/D,WAAf,EAAZ;AACA,4BAAIoE,SAAS,OAAKL,SAAL,CAAe/D,WAAf,EAAb;AACA,4BAAIS,SAAS,GAAT,CAAJ,EAAmB;AACfwD,oCAAQf,IAAR,CAAaiB,MAAMZ,QAAN,CAAe;AAAA,uCAAMa,OAAOb,QAAP,EAAN;AAAA,6BAAf,CAAb;AACH,yBAFD,MAGK;AACDU,oCAAQf,IAAR,CAAaiB,MAAMZ,QAAN,CAAe1B,SAAf,EAA0B;AAAA,uCAAMuC,OAAOb,QAAP,EAAN;AAAA,6BAA1B,CAAb;AACH;AARe;AASnB;AACJ;AACD,mBAAOU,OAAP;AACH","file":"generation.js","sourcesContent":["let parser = new Parser();\r\n\r\nArray.prototype.randElement = function () {\r\n    return this[Math.floor(Math.random() * this.length)];\r\n};\r\n\r\nfunction rand(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\nfunction randInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction randBool(chance) {\r\n    return Math.random() < chance;\r\n}\r\n\r\nclass Expression {\r\n    constructor(source) {\r\n        this.expr = source;\r\n    }\r\n\r\n    set expr(source) {\r\n        if (isNaN(source)) {\r\n            if (source instanceof Expression) {\r\n                this.source = source.source;\r\n                this.expression = source.expression;\r\n                this.isNumber = source.isNumber;\r\n            }\r\n            else {\r\n                this.source = source;\r\n                this.expression = parser.parse(source);\r\n                this.isNumber = false;\r\n            }\r\n        }\r\n        else {\r\n            this.source = source.toString();\r\n            this.expression = Number(source);\r\n            this.isNumber = true;\r\n        }\r\n    }\r\n\r\n    get expr() {\r\n        return this.source;\r\n    }\r\n\r\n    value(variables = {}) {\r\n        return this.isNumber ? this.expression : this.expression.evaluate(variables);\r\n    }\r\n}\r\n\r\nclass RandRange {\r\n    constructor(minA, maxA, minB, maxB, bFirst = false) {\r\n        this.minA = minA;\r\n        this.maxA = maxA;\r\n        this.minB = minB;\r\n        this.maxB = maxB;\r\n        this.bFirst = bFirst;\r\n    }\r\n\r\n    generate(a = undefined, b = undefined) {\r\n        if (a !== undefined && b !== undefined) {\r\n            return [a, b];\r\n        }\r\n        else if (a === undefined && b === undefined) {\r\n            if (this.bFirst) {\r\n                b = randInt(this._minB.value(), this._maxB.value());\r\n            }\r\n            else {\r\n                a = randInt(this._minA.value(), this._maxA.value());\r\n            }\r\n        }\r\n        if (a !== undefined) {\r\n            b = randInt(this._minB.value({a: a}), this._maxB.value({a: a}));\r\n            return [a, b];\r\n        }\r\n        else if (b !== undefined) {\r\n            a = randInt(this._minA.value({b: b}), this._maxA.value({b: b}));\r\n        }\r\n        return [a, b];\r\n    }\r\n\r\n    set first(num) {\r\n        num = parseInt(num);\r\n        if (num === 0) {\r\n            this.bFirst = false;\r\n        }\r\n        else if (num === 1) {\r\n            this.bFirst = true;\r\n        }\r\n    }\r\n    get first() {\r\n        return this.bFirst ? 1 : 0;\r\n    }\r\n\r\n    set minA(expr) {\r\n        this._minA = new Expression(expr);\r\n    }\r\n    get minA() {\r\n        return this._minA.source;\r\n    }\r\n    set maxA(expr) {\r\n        this._maxA = new Expression(expr);\r\n    }\r\n    get maxA() {\r\n        return this._maxA.source;\r\n    }\r\n    set minB(expr) {\r\n        this._minB = new Expression(expr);\r\n    }\r\n    get minB() {\r\n        return this._minB.source;\r\n    }\r\n    set maxB(expr) {\r\n        this._maxB = new Expression(expr);\r\n    }\r\n    get maxB() {\r\n        return this._maxB.source;\r\n    }\r\n\r\n    get isAdv() {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass RandRangeAdv extends RandRange {\r\n    constructor(minA, maxA, minB, maxB, expression, target, BFirst = false) {\r\n        super(minA, maxA, minB, maxB, BFirst);\r\n        this.expression = parser.parse(expression);\r\n        if (target === 'a') this.target = 0;\r\n        else if (target === 'b') this.target = 1;\r\n    }\r\n\r\n    setExpression(expression) {\r\n        this.expression = parser.parse(expression);\r\n    }\r\n\r\n    setTarget(target) {\r\n        if (target === 'a') this.target = 0;\r\n        else if (target === 'b') this.target = 1;\r\n    }\r\n\r\n    generate(a = undefined, b = undefined) {\r\n        let result = super.generate(a, b);\r\n        if (!((a !== undefined && this.target === 0) || (b !== undefined && this.target === 1))) {\r\n            result[this.target] = this.expression.evaluate({a: result[0], b: result[1]});\r\n        }\r\n        return result;\r\n    }\r\n\r\n    get isAdv() {\r\n        return true;\r\n    }\r\n}\r\n\r\nclass Rule {\r\n    constructor(condition) {\r\n        if (condition !== undefined) {\r\n            this.condition = condition;\r\n        }\r\n        else {\r\n            this.source = '';\r\n        }\r\n    }\r\n\r\n    set condition(expr) {\r\n        this._condition = parser.parse(expr);\r\n        this.source = expr;\r\n    }\r\n    get condition() {\r\n        return this.source;\r\n    }\r\n\r\n    validate(variables = {}) {\r\n        return this._condition.evaluate(variables);\r\n    }\r\n}\r\n\r\nclass OperatorGen {\r\n    constructor(operator, range, ...rules) {\r\n        this.operator = operator;\r\n        this.range = range;\r\n        this.rules = rules;\r\n    }\r\n\r\n    toggleRangeType() {\r\n        if (this.range.isAdv) {\r\n            this.range = new RandRange(this.range.minA, this.range.maxA, this.range.minB, this.range.maxB, this.range.bFirst);\r\n        }\r\n        else {\r\n            this.range = new RandRangeAdv(this.range.minA, this.range.maxA, this.range.minB, this.range.maxB, 'a', 'a', this.range.bFirst);\r\n        }\r\n    }\r\n\r\n    addRule() {\r\n        this.rules.push(new Rule());\r\n    }\r\n\r\n    generate(operatorGenFuncA = undefined, operatorGenFuncB = undefined) {\r\n        let a = 0, b = 0;\r\n        let i = 0;\r\n        let variables;\r\n        let generateFunc = () => [a, b] = this.range.generate();\r\n        if (operatorGenFuncA !== undefined && operatorGenFuncB !== undefined) {\r\n            generateFunc = () => {\r\n                a = operatorGenFuncA();\r\n                b = operatorGenFuncB();\r\n            }\r\n        }\r\n        else if (operatorGenFuncA !== undefined) {\r\n            generateFunc = () => {\r\n                a = operatorGenFuncA();\r\n                [a, b] = this.range.generate(a);\r\n            }\r\n        }\r\n        else if (operatorGenFuncB !== undefined) {\r\n            generateFunc = () => {\r\n                b = operatorGenFuncB();\r\n                [a, b] = this.range.generate(b);\r\n            }\r\n        }\r\n        do {\r\n            generateFunc();\r\n            variables = {a: a.evaluate(), b: b.evaluate()};\r\n            i++;\r\n        }\r\n        while (!this.rules.every(x => x.validate(variables)) && i <= 10000);\r\n        if (i >= 10000) {\r\n            return undefined;\r\n        }\r\n        return new this.operator(a, b);\r\n    }\r\n}\r\n\r\nclass Generator {\r\n    constructor(minOperators, maxOperators, ...operatorGens) {\r\n        this.min = minOperators;\r\n        this.max = maxOperators;\r\n        this.operators = operatorGens;\r\n    }\r\n\r\n    generate(count = 1) {\r\n        let results = [];\r\n        for (let i = 0; i < count; i++) {\r\n            let len = randInt(this.min, this.max);\r\n            if (len === 1) {\r\n                results.push(this.operators.randElement().generate());\r\n            }\r\n            else if (len === 2) {\r\n                let first = this.operators.randElement();\r\n                let second = this.operators.randElement();\r\n                if (randBool(0.5)) {\r\n                    results.push(first.generate(() => second.generate()));\r\n                }\r\n                else {\r\n                    results.push(first.generate(undefined, () => second.generate()));\r\n                }\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n}"]}