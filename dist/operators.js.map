{"version":3,"sources":["../operators.js"],"names":["Object","defineProperty","Number","prototype","get","evaluate","Operator","a","b","toString","symbol","parenthesesA","parenthesesB","result","Math","floor","priority","Addition","format","Subtraction","Multiplication","floorPriority","Division","Operators","addition","subtraction","multiplication","division"],"mappings":"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","file":"operators.js","sourcesContent":["Object.defineProperty(Number.prototype, 'priority', {\r\n    get: () => 1000\r\n});\r\nNumber.prototype.evaluate = function () {\r\n    return this;\r\n};\r\n\r\nclass Operator {\r\n    constructor(a, b) {\r\n        this.a = a;\r\n        this.b = b;\r\n    }\r\n\r\n    toString() {\r\n        return `${this.a.toString()} ${this.b.toString()}`;\r\n    }\r\n\r\n    format(symbol, parenthesesA, parenthesesB) {\r\n        let result = '';\r\n        if (parenthesesA) {\r\n            result += '(' + this.a.toString() + ')';\r\n        }\r\n        else {\r\n            result += this.a.toString();\r\n        }\r\n        result += ' ' + symbol + ' ';\r\n        if (parenthesesB) {\r\n            result += '(' + this.b.toString() + ')';\r\n        }\r\n        else {\r\n            result += this.b.toString();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    evaluate() {\r\n        return 0;\r\n    }\r\n\r\n    get priority() {\r\n        return 0;\r\n    }\r\n\r\n    get floorPriority() {\r\n        return Math.floor(this.priority / 10) * 10;\r\n    }\r\n\r\n    static get symbol() {\r\n        return ' ';\r\n    }\r\n\r\n    static get locName() {\r\n        return '运算符';\r\n    }\r\n}\r\n\r\nclass Addition extends Operator {\r\n    constructor(a, b) {\r\n        super(a, b);\r\n    }\r\n\r\n    toString() {\r\n        return this.format('+', false, this.b.priority < this.priority);\r\n    }\r\n\r\n    evaluate() {\r\n        return this.a.evaluate() + this.b.evaluate();\r\n    }\r\n\r\n    get priority() {\r\n        return 5;\r\n    }\r\n\r\n    static get symbol() {\r\n        return '+';\r\n    }\r\n\r\n    static get locName() {\r\n        return '加法';\r\n    }\r\n}\r\n\r\nclass Subtraction extends Operator {\r\n    constructor(a, b) {\r\n        super(a, b);\r\n    }\r\n\r\n    toString() {\r\n        return this.format('-', false, this.b.priority <= this.priority);\r\n    }\r\n\r\n    evaluate() {\r\n        return this.a.evaluate() - this.b.evaluate();\r\n    }\r\n\r\n    get priority() {\r\n        return 4;\r\n    }\r\n\r\n    static get symbol() {\r\n        return '-';\r\n    }\r\n\r\n    static get locName() {\r\n        return '减法';\r\n    }\r\n}\r\n\r\nclass Multiplication extends Operator {\r\n    constructor(a, b) {\r\n        super(a, b);\r\n    }\r\n\r\n    toString() {\r\n        return this.format('*', this.a.priority < this.floorPriority, this.b.priority < this.priority);\r\n    }\r\n\r\n    evaluate() {\r\n        return this.a.evaluate() * this.b.evaluate();\r\n    }\r\n\r\n    get priority() {\r\n        return 15;\r\n    }\r\n\r\n    static get symbol() {\r\n        return '*';\r\n    }\r\n\r\n    static get locName() {\r\n        return '乘法';\r\n    }\r\n}\r\n\r\nclass Division extends Operator {\r\n    constructor(a, b) {\r\n        super(a, b);\r\n    }\r\n\r\n    toString() {\r\n        return this.format('/', this.a.priority < this.floorPriority, this.b.priority <= this.priority);\r\n    }\r\n\r\n    evaluate() {\r\n        return this.a.evaluate() / this.b.evaluate();\r\n    }\r\n\r\n    get priority() {\r\n        return 14;\r\n    }\r\n\r\n    static get symbol() {\r\n        return '/';\r\n    }\r\n\r\n    static get locName() {\r\n        return '除法';\r\n    }\r\n}\r\n\r\nconst Operators = {\r\n    addition: Addition,\r\n    subtraction: Subtraction,\r\n    multiplication: Multiplication,\r\n    division: Division\r\n};"]}